{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Deploying OpenShift on IBM Power Systems This Github organization is home to Infrastructure as Code (IaC) patterns to help deploy OpenShift on IBM Power Systems. Terraform is used to create the infrastructure and ansible playbooks are used to deploy and customize OpenShift. The following diagram shows the high level overview of the IaC pattern:","title":"Home"},{"location":"#deploying-openshift-on-ibm-power-systems","text":"This Github organization is home to Infrastructure as Code (IaC) patterns to help deploy OpenShift on IBM Power Systems. Terraform is used to create the infrastructure and ansible playbooks are used to deploy and customize OpenShift. The following diagram shows the high level overview of the IaC pattern:","title":"Deploying OpenShift on IBM Power Systems"},{"location":"openshift-install-power/","text":"Install OpenShift on PowerVS Install OpenShift on PowerVS Introduction Features Supported Platforms MacOS Linux (x86_64) Windows 10 (64-bit) Firewall Requirements Usage Prerequisites Quickstart Advanced Usage Different OpenShift Versions Non-interactive mode Tutorials Detailed Explanation of the Core Commands setup variables create destroy Contributing Introduction This project contains a bash script to help you deploy OpenShift Container Platform 4.X on IBM\u00ae Power Systems\u2122 Virtual Server on IBM Cloud (PowerVS). The Terraform code at ocp4-upi-powervs is used for the deployment process. Ensure your PowerVS instance is prepped for deploying OpenShift Clusters. Please check this link for more details Here is quick demo . Features Simple script based installer to deploy OpenShift (4.5 onwards) cluster on PowerVS leveraging Infrastructure as Code (IaC) pattern Supports multiple (64-bit) x86 platforms including Linux, Windows & Mac OSX Sets up the latest IBM Cloud CLI with Power Virtual Servers plugin. Sets up the latest Terraform binary Provides interactive mode to populate required Terraform variables Abstract out the Terraform lifecycle management Supported Platforms Only 64bit Operating Systems are supported by the script. The script requires bash shell and a package manager pre-configured. MacOS Catalina (10.15) and above is required. The script uses Homebrew package manager to install required packages. Linux (x86_64) RHEL8/CentOS8 and above or Ubuntu 16.04 and above is required. The script uses the default package manager ( yum/dnf/apt ) based on the distribution. Windows 10 (64-bit) The script can run on GitBash, Windows Subsystem for Linux and Cygwin terminals. If using Cygwin, then please ensure curl and unzip packages are installed. You will need to run the Cygwin setup again. Note: PowerShell is Unsupported . Firewall Requirements Ensure inbound access is allowed for the following TCP ports. This is only required when using a Cloud instance or a remote VM so that you can connect to it using SSH and run the installer 22 (SSH) Ensure outbound access is allowed for the following TCP ports 80 (HTTP) 443 (HTTPS) 6443 (OC CLI) Usage Create an install directory where all the configurations, logs and data files will be stored. $ mkdir ocp-install-dir && cd ocp-install-dir Download the script on your system and change the permission to execute. $ curl -sL https://raw.githubusercontent.com/ocp-power-automation/openshift-install-power/master/openshift-install-powervs -o ./openshift-install-powervs $ chmod +x ./openshift-install-powervs Run the script. $ ./openshift-install-powervs Automation for deploying OpenShift 4.X on PowerVS Usage: openshift-install-powervs [command] [<args> [<value>]] Available commands: setup Install all the required packages/binaries in current directory variables Interactive way to populate the variables file create Create an OpenShift cluster destroy Destroy an OpenShift cluster output Display the cluster information. Runs terraform output [NAME] access-info Display the access information of installed OpenShift cluster help Display this information Where <args>: -var Terraform variable to be passed to the create/destroy command -var-file Terraform variable file name in current directory. (By default using var.tfvars) -force-destroy Not ask for confirmation during destroy command -verbose Enable verbose for terraform console messages -all-images List all the images available during variables prompt -trace Enable tracing of all executed commands -version, -v Display the script version Environment Variables: IBMCLOUD_API_KEY IBM Cloud API key RELEASE_VER OpenShift release version (Default: 4.6) ARTIFACTS_VERSION Tag or Branch name of ocp4-upi-powervs repository (Default: release-<RELEASE_VER>) RHEL_SUBS_PASSWORD RHEL subscription password if not provided in variables NO_OF_RETRY Number of retries/attempts to run repeatable actions such as create (Default: 5) Submit issues at: https://github.com/ocp-power-automation/openshift-install-power/issues Prerequisites The script assumes PowerVS prerequisites for OpenShift are already in place. In case you missed, here is the link to the prerequisites For running the script you need the following: 1. IBM Cloud API key : Create the key by following the instructions available in the following link 2. OpenShift Pull secret : Download the secret from the following link . You'll need to place the file in the install directory and name it as pull-secret.txt 3. RHEL Subscription ID and Password . Quickstart Export the IBM Cloud API Key and RHEL Subscription Password. $ set +o history $ export IBMCLOUD_API_KEY='<your API key>' $ export RHEL_SUBS_PASSWORD='<your RHEL subscription password>' $ set -o history Run the create command. $ ./openshift-install-powervs create The script will setup the required tools and run in interactive mode prompting for inputs. Once the above command completes successfully it will print the cluster access information. ``` Login to bastion: 'ssh -i automation/data/id_rsa root@145.48.43.53' and start using the 'oc' command. To access the cluster on local system when using 'oc' run: 'export KUBECONFIG=/root/ocp-install-dir/automation/kubeconfig' Access the OpenShift web-console here: https://console-openshift-console.apps.test-ocp-6f2c.ibm.com Login to the console with user: \"kubeadmin\", and password: \"MHvmI-z5nY8-CBFKF-hmCDJ\" Add the line on local system 'hosts' file: 145.48.43.53 api.test-ocp-6f2c.ibm.com console-openshift-console.apps.test-ocp-6f2c.ibm.com integrated-oauth-server-openshift-authentication.apps.test-ocp-6f2c.ibm.com oauth-openshift.apps.test-ocp-6f2c.ibm.com prometheus-k8s-openshift-monitoring.apps.test-ocp-6f2c.ibm.com grafana-openshift-monitoring.apps.test-ocp-6f2c.ibm.com example.apps.test-ocp-6f2c.ibm.com ``` Advanced Usage Before running the script, you may choose to override some environment variables as per your requirement. Different OpenShift Versions By default OpenShift version 4.6 is installed. If you want to install 4.5, then export the following variables RELEASE_VER : Default is 4.6 $ export RELEASE_VER=\"4.5\" ARTIFACTS_VERSION : Tag/Branch (eg: release-4.6, v4.5.1, master) of ocp4-upi-powervs repository. Default is \"release- \". $ export ARTIFACTS_VERSION=\"release-4.5\" Non-interactive mode You can avoid the interactive mode by having the required input files available in the install directory Required input files 1. Terraform vars file (filename: var.tfvars ) 2. SSH key files (filename: id_rsa & id_rsa.pub ) Example `var.tfvars` file ``` ibmcloud_region = \"syd\" ibmcloud_zone = \"syd04\" service_instance_id = \"123456abc-xzz-2223434343\" rhel_image_name = \"rhel-83-12082020\" rhcos_image_name = \"rhcos-46-09182020\" network_name = \"ocp-net\" openshift_install_tarball = \"https://mirror.openshift.com/pub/openshift-v4/ppc64le/clients/ocp/stable-4.6/openshift-install-linux.tar.gz\" openshift_client_tarball = \"https://mirror.openshift.com/pub/openshift-v4/ppc64le/clients/ocp/stable-4.6/openshift-client-linux.tar.gz\" cluster_id_prefix = \"test-ocp\" cluster_domain = \"xip.io\" storage_type = \"nfs\" volume_size = \"300\" bastion = {memory = \"16\", processors = \"1\", \"count\" = 1} bootstrap = {memory = \"32\", processors = \"0.5\", \"count\" = 1} master = {memory = \"32\", processors = \"0.5\", \"count\" = 3} worker = {memory = \"32\", processors = \"0.5\", \"count\" = 2} rhel_subscription_username = \"mysubscription@email.com\" rhel_subscription_password = \"mysubscriptionPassword\" ``` You can also pass a custom Terraform variables file using the option `-var-file <filename>` to the script. You can also use the option `-var \"key=value\"` to pass a single variable. If the same variable is given more than once then precedence will be from left (low) to right (high). Tutorials Check out the following learning path for deploying and using OpenShift on PowerVS Detailed Explanation of the Core Commands The following core commands are supported by the script. setup variables create destroy Below is a simple flow chart explaining the flow of each command. Contributing Please see the contributing doc for more details. PRs are most welcome !!","title":"Deploying OpenShift on IBM Cloud Power Virtual Servers via Bash Script"},{"location":"openshift-install-power/#install-openshift-on-powervs","text":"Install OpenShift on PowerVS Introduction Features Supported Platforms MacOS Linux (x86_64) Windows 10 (64-bit) Firewall Requirements Usage Prerequisites Quickstart Advanced Usage Different OpenShift Versions Non-interactive mode Tutorials Detailed Explanation of the Core Commands setup variables create destroy Contributing","title":"Install OpenShift on PowerVS"},{"location":"openshift-install-power/#introduction","text":"This project contains a bash script to help you deploy OpenShift Container Platform 4.X on IBM\u00ae Power Systems\u2122 Virtual Server on IBM Cloud (PowerVS). The Terraform code at ocp4-upi-powervs is used for the deployment process. Ensure your PowerVS instance is prepped for deploying OpenShift Clusters. Please check this link for more details Here is quick demo .","title":"Introduction"},{"location":"openshift-install-power/#features","text":"Simple script based installer to deploy OpenShift (4.5 onwards) cluster on PowerVS leveraging Infrastructure as Code (IaC) pattern Supports multiple (64-bit) x86 platforms including Linux, Windows & Mac OSX Sets up the latest IBM Cloud CLI with Power Virtual Servers plugin. Sets up the latest Terraform binary Provides interactive mode to populate required Terraform variables Abstract out the Terraform lifecycle management","title":"Features"},{"location":"openshift-install-power/#supported-platforms","text":"Only 64bit Operating Systems are supported by the script. The script requires bash shell and a package manager pre-configured.","title":"Supported Platforms"},{"location":"openshift-install-power/#macos","text":"Catalina (10.15) and above is required. The script uses Homebrew package manager to install required packages.","title":"MacOS"},{"location":"openshift-install-power/#linux-x86_64","text":"RHEL8/CentOS8 and above or Ubuntu 16.04 and above is required. The script uses the default package manager ( yum/dnf/apt ) based on the distribution.","title":"Linux (x86_64)"},{"location":"openshift-install-power/#windows-10-64-bit","text":"The script can run on GitBash, Windows Subsystem for Linux and Cygwin terminals. If using Cygwin, then please ensure curl and unzip packages are installed. You will need to run the Cygwin setup again. Note: PowerShell is Unsupported .","title":"Windows 10 (64-bit)"},{"location":"openshift-install-power/#firewall-requirements","text":"Ensure inbound access is allowed for the following TCP ports. This is only required when using a Cloud instance or a remote VM so that you can connect to it using SSH and run the installer 22 (SSH) Ensure outbound access is allowed for the following TCP ports 80 (HTTP) 443 (HTTPS) 6443 (OC CLI)","title":"Firewall Requirements"},{"location":"openshift-install-power/#usage","text":"Create an install directory where all the configurations, logs and data files will be stored. $ mkdir ocp-install-dir && cd ocp-install-dir Download the script on your system and change the permission to execute. $ curl -sL https://raw.githubusercontent.com/ocp-power-automation/openshift-install-power/master/openshift-install-powervs -o ./openshift-install-powervs $ chmod +x ./openshift-install-powervs Run the script. $ ./openshift-install-powervs Automation for deploying OpenShift 4.X on PowerVS Usage: openshift-install-powervs [command] [<args> [<value>]] Available commands: setup Install all the required packages/binaries in current directory variables Interactive way to populate the variables file create Create an OpenShift cluster destroy Destroy an OpenShift cluster output Display the cluster information. Runs terraform output [NAME] access-info Display the access information of installed OpenShift cluster help Display this information Where <args>: -var Terraform variable to be passed to the create/destroy command -var-file Terraform variable file name in current directory. (By default using var.tfvars) -force-destroy Not ask for confirmation during destroy command -verbose Enable verbose for terraform console messages -all-images List all the images available during variables prompt -trace Enable tracing of all executed commands -version, -v Display the script version Environment Variables: IBMCLOUD_API_KEY IBM Cloud API key RELEASE_VER OpenShift release version (Default: 4.6) ARTIFACTS_VERSION Tag or Branch name of ocp4-upi-powervs repository (Default: release-<RELEASE_VER>) RHEL_SUBS_PASSWORD RHEL subscription password if not provided in variables NO_OF_RETRY Number of retries/attempts to run repeatable actions such as create (Default: 5) Submit issues at: https://github.com/ocp-power-automation/openshift-install-power/issues","title":"Usage"},{"location":"openshift-install-power/#prerequisites","text":"The script assumes PowerVS prerequisites for OpenShift are already in place. In case you missed, here is the link to the prerequisites For running the script you need the following: 1. IBM Cloud API key : Create the key by following the instructions available in the following link 2. OpenShift Pull secret : Download the secret from the following link . You'll need to place the file in the install directory and name it as pull-secret.txt 3. RHEL Subscription ID and Password .","title":"Prerequisites"},{"location":"openshift-install-power/#quickstart","text":"Export the IBM Cloud API Key and RHEL Subscription Password. $ set +o history $ export IBMCLOUD_API_KEY='<your API key>' $ export RHEL_SUBS_PASSWORD='<your RHEL subscription password>' $ set -o history Run the create command. $ ./openshift-install-powervs create The script will setup the required tools and run in interactive mode prompting for inputs. Once the above command completes successfully it will print the cluster access information. ``` Login to bastion: 'ssh -i automation/data/id_rsa root@145.48.43.53' and start using the 'oc' command. To access the cluster on local system when using 'oc' run: 'export KUBECONFIG=/root/ocp-install-dir/automation/kubeconfig' Access the OpenShift web-console here: https://console-openshift-console.apps.test-ocp-6f2c.ibm.com Login to the console with user: \"kubeadmin\", and password: \"MHvmI-z5nY8-CBFKF-hmCDJ\" Add the line on local system 'hosts' file: 145.48.43.53 api.test-ocp-6f2c.ibm.com console-openshift-console.apps.test-ocp-6f2c.ibm.com integrated-oauth-server-openshift-authentication.apps.test-ocp-6f2c.ibm.com oauth-openshift.apps.test-ocp-6f2c.ibm.com prometheus-k8s-openshift-monitoring.apps.test-ocp-6f2c.ibm.com grafana-openshift-monitoring.apps.test-ocp-6f2c.ibm.com example.apps.test-ocp-6f2c.ibm.com ```","title":"Quickstart"},{"location":"openshift-install-power/#advanced-usage","text":"Before running the script, you may choose to override some environment variables as per your requirement.","title":"Advanced Usage"},{"location":"openshift-install-power/#different-openshift-versions","text":"By default OpenShift version 4.6 is installed. If you want to install 4.5, then export the following variables RELEASE_VER : Default is 4.6 $ export RELEASE_VER=\"4.5\" ARTIFACTS_VERSION : Tag/Branch (eg: release-4.6, v4.5.1, master) of ocp4-upi-powervs repository. Default is \"release- \". $ export ARTIFACTS_VERSION=\"release-4.5\"","title":"Different OpenShift Versions"},{"location":"openshift-install-power/#non-interactive-mode","text":"You can avoid the interactive mode by having the required input files available in the install directory Required input files 1. Terraform vars file (filename: var.tfvars ) 2. SSH key files (filename: id_rsa & id_rsa.pub ) Example `var.tfvars` file ``` ibmcloud_region = \"syd\" ibmcloud_zone = \"syd04\" service_instance_id = \"123456abc-xzz-2223434343\" rhel_image_name = \"rhel-83-12082020\" rhcos_image_name = \"rhcos-46-09182020\" network_name = \"ocp-net\" openshift_install_tarball = \"https://mirror.openshift.com/pub/openshift-v4/ppc64le/clients/ocp/stable-4.6/openshift-install-linux.tar.gz\" openshift_client_tarball = \"https://mirror.openshift.com/pub/openshift-v4/ppc64le/clients/ocp/stable-4.6/openshift-client-linux.tar.gz\" cluster_id_prefix = \"test-ocp\" cluster_domain = \"xip.io\" storage_type = \"nfs\" volume_size = \"300\" bastion = {memory = \"16\", processors = \"1\", \"count\" = 1} bootstrap = {memory = \"32\", processors = \"0.5\", \"count\" = 1} master = {memory = \"32\", processors = \"0.5\", \"count\" = 3} worker = {memory = \"32\", processors = \"0.5\", \"count\" = 2} rhel_subscription_username = \"mysubscription@email.com\" rhel_subscription_password = \"mysubscriptionPassword\" ``` You can also pass a custom Terraform variables file using the option `-var-file <filename>` to the script. You can also use the option `-var \"key=value\"` to pass a single variable. If the same variable is given more than once then precedence will be from left (low) to right (high).","title":"Non-interactive mode"},{"location":"openshift-install-power/#tutorials","text":"Check out the following learning path for deploying and using OpenShift on PowerVS","title":"Tutorials"},{"location":"openshift-install-power/#detailed-explanation-of-the-core-commands","text":"The following core commands are supported by the script.","title":"Detailed Explanation of the Core Commands"},{"location":"openshift-install-power/#setup","text":"","title":"setup"},{"location":"openshift-install-power/#variables","text":"","title":"variables"},{"location":"openshift-install-power/#create","text":"","title":"create"},{"location":"openshift-install-power/#destroy","text":"Below is a simple flow chart explaining the flow of each command.","title":"destroy"},{"location":"openshift-install-power/#contributing","text":"Please see the contributing doc for more details. PRs are most welcome !!","title":"Contributing"},{"location":"openshift-install-power/CODE_OF_CONDUCT/","text":"Contributor Covenant Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community. Our Standards Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate. Scope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement. Contact with repository owners. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident. Enforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct: 1. Correction Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested. 2. Warning Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban. 3. Temporary Ban Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban. 4. Permanent Ban Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder .","title":"Contributor Covenant Code of Conduct"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#our-pledge","text":"We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.","title":"Our Pledge"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#enforcement-responsibilities","text":"Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.","title":"Enforcement Responsibilities"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.","title":"Scope"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement. Contact with repository owners. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident.","title":"Enforcement"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#enforcement-guidelines","text":"Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:","title":"Enforcement Guidelines"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#1-correction","text":"Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.","title":"1. Correction"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#2-warning","text":"Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.","title":"2. Warning"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#3-temporary-ban","text":"Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.","title":"3. Temporary Ban"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#4-permanent-ban","text":"Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community.","title":"4. Permanent Ban"},{"location":"openshift-install-power/CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder .","title":"Attribution"},{"location":"openshift-install-power/CONTRIBUTING/","text":"Contributing This project is Apache 2.0 Licenced and welcomes external contributions. When contributing to this repository, please first discuss the change you wish to make via an issue . Please note we have a code of conduct , please follow it in all your interactions with the project. Issues If you find any issue with the code or documentation please submit an issue . It is best to check out existing issues first to see if a similar one is open or has already been discussed. Pull Request Process To contribute code or documentation, please submit a pull request . Always take the latest update from upstream/master before creating a pull request. Ensure your changes work fine and have no syntax problems. Also, verify that it does not break the existing code flow. Update the README.md or relevant documents with details of changes to the code. This includes variables change, added or updated feature, change in steps, dependencies change, etc. Make use of proper commit message. Mention the issue# which you are planning to address eg: Fixes #38. After creating the pull request ensure you implement all the review comments given if any. Pull request will be merged only when it has at least two approvals from the list of reviewers. Please read Developer Certificate of Origin and sign-off your commit using command git commit -s .","title":"Contributing"},{"location":"openshift-install-power/CONTRIBUTING/#contributing","text":"This project is Apache 2.0 Licenced and welcomes external contributions. When contributing to this repository, please first discuss the change you wish to make via an issue . Please note we have a code of conduct , please follow it in all your interactions with the project.","title":"Contributing"},{"location":"openshift-install-power/CONTRIBUTING/#issues","text":"If you find any issue with the code or documentation please submit an issue . It is best to check out existing issues first to see if a similar one is open or has already been discussed.","title":"Issues"},{"location":"openshift-install-power/CONTRIBUTING/#pull-request-process","text":"To contribute code or documentation, please submit a pull request . Always take the latest update from upstream/master before creating a pull request. Ensure your changes work fine and have no syntax problems. Also, verify that it does not break the existing code flow. Update the README.md or relevant documents with details of changes to the code. This includes variables change, added or updated feature, change in steps, dependencies change, etc. Make use of proper commit message. Mention the issue# which you are planning to address eg: Fixes #38. After creating the pull request ensure you implement all the review comments given if any. Pull request will be merged only when it has at least two approvals from the list of reviewers. Please read Developer Certificate of Origin and sign-off your commit using command git commit -s .","title":"Pull Request Process"},{"location":"openshift-install-power/docs/create/","text":"Command create What it does This command when executed will start off the deployment process. You can optionally use other options are listed in the help menu. Accepts arguments: -verbose Enable verbose for terraform console -var Terraform variable to be passed to the create/destroy command -var-file Terraform variable file name in current directory. (By default using var.tfvars) The create command will check if all the tools are installed for the deployment to start. If not then it will run the setup command. Next, it will check if the variables file var.tfvars is available in the install directory or provided via argument -var-file , if not then it will run the variables command. The Terraform console log for each attempt will be stored in logs/ directory with file name as ocp4-upi-powervs_<timestamp>_apply_<attempt_number>.log . These log files can be used for debugging purpose. Usage When setup and/or variables commands are already completed. # openshift-install-powervs create [setup_tools] Verifying the latest packages and tools [powervs_login] Trying to login with the provided IBMCLOUD_API_KEY... Targeting service crn:v1:bluemix:public:power-iaas:tor01:a/65b64c1f1c29XXXXXXXXXc:4a7700b1-e318-476b-9bf6-5a88XXXXXXX981::... [init_terraform] Initializing Terraform plugins... [init_terraform] Validating Terraform code... [apply] Running terraform apply... please wait Attempt: 1/5 [retry_terraform] Completed running the terraform command. Login to bastion: 'ssh -i automation/data/id_rsa root@145.48.43.53' and start using the 'oc' command. To access the cluster on local system when using 'oc' run: 'export KUBECONFIG=/root/ocp-install-dir/automation/kubeconfig' Access the OpenShift web-console here: https://console-openshift-console.apps.test-ocp-6f2c.ibm.com Login to the console with user: \"kubeadmin\", and password: \"MHvmI-z5nY8-CBFKF-hmCDJ\" Add the line on local system 'hosts' file: 145.48.43.53 api.test-ocp-6f2c.ibm.com console-openshift-console.apps.test-ocp-6f2c.ibm.com integrated-oauth-server-openshift-authentication.apps.test-ocp-6f2c.ibm.com oauth-openshift.apps.test-ocp-6f2c.ibm.com prometheus-k8s-openshift-monitoring.apps.test-ocp-6f2c.ibm.com grafana-openshift-monitoring.apps.test-ocp-6f2c.ibm.com example.apps.test-ocp-6f2c.ibm.com [cluster_access_info] SUCCESS: Congratulations! create command completed","title":"Command create"},{"location":"openshift-install-power/docs/create/#command-create","text":"","title":"Command create"},{"location":"openshift-install-power/docs/create/#what-it-does","text":"This command when executed will start off the deployment process. You can optionally use other options are listed in the help menu. Accepts arguments: -verbose Enable verbose for terraform console -var Terraform variable to be passed to the create/destroy command -var-file Terraform variable file name in current directory. (By default using var.tfvars) The create command will check if all the tools are installed for the deployment to start. If not then it will run the setup command. Next, it will check if the variables file var.tfvars is available in the install directory or provided via argument -var-file , if not then it will run the variables command. The Terraform console log for each attempt will be stored in logs/ directory with file name as ocp4-upi-powervs_<timestamp>_apply_<attempt_number>.log . These log files can be used for debugging purpose.","title":"What it does"},{"location":"openshift-install-power/docs/create/#usage","text":"When setup and/or variables commands are already completed. # openshift-install-powervs create [setup_tools] Verifying the latest packages and tools [powervs_login] Trying to login with the provided IBMCLOUD_API_KEY... Targeting service crn:v1:bluemix:public:power-iaas:tor01:a/65b64c1f1c29XXXXXXXXXc:4a7700b1-e318-476b-9bf6-5a88XXXXXXX981::... [init_terraform] Initializing Terraform plugins... [init_terraform] Validating Terraform code... [apply] Running terraform apply... please wait Attempt: 1/5 [retry_terraform] Completed running the terraform command. Login to bastion: 'ssh -i automation/data/id_rsa root@145.48.43.53' and start using the 'oc' command. To access the cluster on local system when using 'oc' run: 'export KUBECONFIG=/root/ocp-install-dir/automation/kubeconfig' Access the OpenShift web-console here: https://console-openshift-console.apps.test-ocp-6f2c.ibm.com Login to the console with user: \"kubeadmin\", and password: \"MHvmI-z5nY8-CBFKF-hmCDJ\" Add the line on local system 'hosts' file: 145.48.43.53 api.test-ocp-6f2c.ibm.com console-openshift-console.apps.test-ocp-6f2c.ibm.com integrated-oauth-server-openshift-authentication.apps.test-ocp-6f2c.ibm.com oauth-openshift.apps.test-ocp-6f2c.ibm.com prometheus-k8s-openshift-monitoring.apps.test-ocp-6f2c.ibm.com grafana-openshift-monitoring.apps.test-ocp-6f2c.ibm.com example.apps.test-ocp-6f2c.ibm.com [cluster_access_info] SUCCESS: Congratulations! create command completed","title":"Usage"},{"location":"openshift-install-power/docs/destroy/","text":"Command destroy What it does This command when executed will destroy the cluster that was created by the script. You can optionally use other options are listed in the help menu. Accepts arguments: -verbose Enable verbose for terraform console -var Terraform variable to be passed to the create/destroy command -var-file Terraform variable file name in current directory. (By default using var.tfvars) -force-destroy Not ask for confirmation during destroy command Ensure the cluster created using the create command is always destroyed using this script itself before you delete or change the install directory or its contents. Also make use of the same variables you had used for create command. The Terraform console log for each attempt will be stored in logs/ directory with file name as ocp4-upi-powervs_<timestamp>_destroy_<attempt_number>.log . These log files can be used for debugging purpose. Usage When the response is 'no' or any other input during the confirmation. # openshift-install-powervs destroy [question] > Are you sure you want to proceed with destroy? 1) yes 2) no #? 2 - You have answered: no [destroy] ERROR: Exiting on user request When using -force-destroy option. # openshift-install-powervs destroy -force-destroy [main] WARN: Enabling forceful destruction option for terraform destroy command [destroy] Running terraform destroy... please wait Attempt: 1/5 [retry_terraform] Completed running the terraform command. [destroy] SUCCESS: Done! destroy commmand completed","title":"Command destroy"},{"location":"openshift-install-power/docs/destroy/#command-destroy","text":"","title":"Command destroy"},{"location":"openshift-install-power/docs/destroy/#what-it-does","text":"This command when executed will destroy the cluster that was created by the script. You can optionally use other options are listed in the help menu. Accepts arguments: -verbose Enable verbose for terraform console -var Terraform variable to be passed to the create/destroy command -var-file Terraform variable file name in current directory. (By default using var.tfvars) -force-destroy Not ask for confirmation during destroy command Ensure the cluster created using the create command is always destroyed using this script itself before you delete or change the install directory or its contents. Also make use of the same variables you had used for create command. The Terraform console log for each attempt will be stored in logs/ directory with file name as ocp4-upi-powervs_<timestamp>_destroy_<attempt_number>.log . These log files can be used for debugging purpose.","title":"What it does"},{"location":"openshift-install-power/docs/destroy/#usage","text":"When the response is 'no' or any other input during the confirmation. # openshift-install-powervs destroy [question] > Are you sure you want to proceed with destroy? 1) yes 2) no #? 2 - You have answered: no [destroy] ERROR: Exiting on user request When using -force-destroy option. # openshift-install-powervs destroy -force-destroy [main] WARN: Enabling forceful destruction option for terraform destroy command [destroy] Running terraform destroy... please wait Attempt: 1/5 [retry_terraform] Completed running the terraform command. [destroy] SUCCESS: Done! destroy commmand completed","title":"Usage"},{"location":"openshift-install-power/docs/setup/","text":"Command setup What it does This command when executed will setup the automation requirements to be run in the current directory. It will setup required system packages, IBM Cloud CLI and power-iaas plugin, Terraform and the automation code (artifacts). Install system packages Installs all the required packages/binaries in current directory. The script will install following packages using the package manager installed on your system. 1. curl 1. unzip 1. tar Note: This is not applicable for Windows OS, make sure the commands are available before running the script. Setup IBM Cloud CLI Downloads the latest IBM Cloud CLI binary. The downloaded binary is placed in the current directory. If the latest CLI is already present in the system PATH then the script will create a symbolic link in the current directory and use it. The script does not download the binary in this case. Setup IBM Cloud plug-in for Power (power-iaas) Installs the latest IBM Cloud power-iaas plug-in if the latest is not installed already. Setup Terraform Downloads the latest Terraform binary from https://releases.hashicorp.com/terraform/. The downloaded binary is placed in the current directory. If the latest Terraform is already present in the system PATH then the script will create a symbolic link in the current directory and use it. The script does not download the binary in this case. Download the artifacts Downloads the Terraform artifacts which is used to create the OpenShift 4 cluster on PowerVS at IBM Cloud. The script uses environment variable ARTIFACTS_VERSION to download the OCP on PowerVS code. ARTIFACTS_VERSION can set to the branch or tag name eg: release-4.5, release-4.6 (default) , v4.5.1, etc. Another environment variable you can set is RELEASE_VER to the OpenShift version you want to install. eg: 4.5, 4.6 (default) , etc. Usage # openshift-install-powervs setup [setup] Installing dependency packages and tools [setup_tools] Verifying the latest packages and tools [setup_artifacts] Downloading code artifacts release-4.6 in ./automation Attempt: 1/5 [setup] SUCCESS: setup command completed!","title":"Command setup"},{"location":"openshift-install-power/docs/setup/#command-setup","text":"","title":"Command setup"},{"location":"openshift-install-power/docs/setup/#what-it-does","text":"This command when executed will setup the automation requirements to be run in the current directory. It will setup required system packages, IBM Cloud CLI and power-iaas plugin, Terraform and the automation code (artifacts).","title":"What it does"},{"location":"openshift-install-power/docs/setup/#install-system-packages","text":"Installs all the required packages/binaries in current directory. The script will install following packages using the package manager installed on your system. 1. curl 1. unzip 1. tar Note: This is not applicable for Windows OS, make sure the commands are available before running the script.","title":"Install system packages"},{"location":"openshift-install-power/docs/setup/#setup-ibm-cloud-cli","text":"Downloads the latest IBM Cloud CLI binary. The downloaded binary is placed in the current directory. If the latest CLI is already present in the system PATH then the script will create a symbolic link in the current directory and use it. The script does not download the binary in this case.","title":"Setup IBM Cloud CLI"},{"location":"openshift-install-power/docs/setup/#setup-ibm-cloud-plug-in-for-power-power-iaas","text":"Installs the latest IBM Cloud power-iaas plug-in if the latest is not installed already.","title":"Setup IBM Cloud plug-in for Power (power-iaas)"},{"location":"openshift-install-power/docs/setup/#setup-terraform","text":"Downloads the latest Terraform binary from https://releases.hashicorp.com/terraform/. The downloaded binary is placed in the current directory. If the latest Terraform is already present in the system PATH then the script will create a symbolic link in the current directory and use it. The script does not download the binary in this case.","title":"Setup Terraform"},{"location":"openshift-install-power/docs/setup/#download-the-artifacts","text":"Downloads the Terraform artifacts which is used to create the OpenShift 4 cluster on PowerVS at IBM Cloud. The script uses environment variable ARTIFACTS_VERSION to download the OCP on PowerVS code. ARTIFACTS_VERSION can set to the branch or tag name eg: release-4.5, release-4.6 (default) , v4.5.1, etc. Another environment variable you can set is RELEASE_VER to the OpenShift version you want to install. eg: 4.5, 4.6 (default) , etc.","title":"Download the artifacts"},{"location":"openshift-install-power/docs/setup/#usage","text":"# openshift-install-powervs setup [setup] Installing dependency packages and tools [setup_tools] Verifying the latest packages and tools [setup_artifacts] Downloading code artifacts release-4.6 in ./automation Attempt: 1/5 [setup] SUCCESS: setup command completed!","title":"Usage"},{"location":"openshift-install-power/docs/variables/","text":"Command variables What it does This command when executed will run interactive prompts for gathering inputs for installing OpenShift on PowerVS. The results will be stored in a file named var.tfvars in the current directory which will be used as an input to the Terraform automation. The installation process needs pull-secret.txt in the current directory for downloading OpenShift images on the cluster. If not found, the variables command will prompt for pull-secret contents. Similar to pull-secret.txt file the script will also lookup for id_rsa & id_rsa.pub files in the current directory. If not found it will prompt to use the current login user's SSH key pair at ~/.ssh/ . If you reply a no then the script will create an SSH key pair for you in the current directory. The private key id_rsa can be used to login to the cluster. The SSH keys should be in OpenSSH format and without a passphrase. Please ensure you have exported the IBM Cloud API key using following command: export IBMCLOUD_API_KEY=<your api key> Optionally you could also export the RHEL subscription password if you do not want to store it in the variables file. export RHEL_SUBS_PASSWORD='<your subscription password>' The script will try to filter the images for selection. The argument -all-images can be used to display all the available images during the prompt for RHEL and RHCOS image. There will be series of questions mainly categorized as: Multi choice question List of options will be displayed where you need to enter the number corresponding to the choice you want to select. [question] > Select the RHEL image to use for bastion node: 1) rhel-82-10162020 2) rhel-83-11032020 #? 1 - You have answered: rhel-82-10162020 Question with default value The question will have a default value present at the end in (round-brackets). Just press enter if you want to use the default value OR type the value you want and press Enter key. [question] > Enter a short name to identify the cluster (test-ocp) ? - You have answered: test-ocp [question] > Enter a domain name for the cluster (ibm.com) ? myorg.com - You have answered: myorg.com Question in plain text The question which can be answered in plain text. Enter the value you want and press Enter key. [question] > Enter RHEL subscription username for bastion nodes ? myredhatuser - You have answered: myredhatuser Question with sensitive value The question which accept sensitive information such as passwords and pull-secret contents. [question] > Enter the password for above username. WARNING: If you do not wish to store the subscription password please export RHEL_SUBS_PASSWORD - *********** Usage # ./openshift-install-powervs variables [setup_tools] Verifying the latest packages and tools [variables] Trying to login with the provided IBMCLOUD_API_KEY... [question] > Select the Service Instance name to use: 1) ocp-cicd-toronto-01 2) ocp-internal-toronto #? 1 - You have answered: ocp-cicd-toronto-01 Targeting service crn:v1:bluemix:public:power-iaas:tor01:a/65b64c1f1c2XXXXX:4a1f10a2-0797-4ac8-9c41-XXXXXXX::... [variables] Gathering information from the selected Service Instance... Please wait [question] > Select the RHEL image to use for bastion node: 1) rhel-82-10162020 2) rhel-83-11032020 #? 1 - You have answered: rhel-82-10162020 [question] > Select the RHCOS image to use for cluster nodes: 1) rhcos-45-09242020 2) rhcos-46-09182020 3) rhcos-47-10172020 #? 2 - You have answered: rhcos-46-09182020 [question] > Select the private network to use: 1) ocp-net #? 1 - You have answered: ocp-net [question] > Select the OCP version to use: 1) 4.5.4 4) 4.5.7 7) 4.5.10 10) 4.5.13 13) 4.5.16 16) 4.5.19 19) fast-4.5 2) 4.5.5 5) 4.5.8 8) 4.5.11 11) 4.5.14 14) 4.5.17 17) 4.5.20 20) latest-4.5 3) 4.5.6 6) 4.5.9 9) 4.5.12 12) 4.5.15 15) 4.5.18 18) candidate-4.5 21) stable-4.5 #? 11 - You have answered: 4.5.14 [question] > Enter a short name to identify the cluster (test-ocp) ? - You have answered: test-ocp [question] > Enter a domain name for the cluster (ibm.com) ? myorg.com - You have answered: myorg.com [question] > Do you want to configure High Availability for bastion nodes? 1) yes 2) no #? 2 - You have answered: no [question] > Do you need NFS storage to be configured? 1) yes 2) no #? 1 - You have answered: yes [question] > Enter the NFS volume size(GB) (300) ? - You have answered: 300 [question] > Do you want to use the default configuration for all the cluster nodes? 1) yes 2) no #? 1 - You have answered: yes [question] > Enter RHEL subscription username for bastion nodes ? myredhatuser - You have answered: myredhatuser [question] > Enter the password for above username. WARNING: If you do not wish to store the subscription password please export RHEL_SUBS_PASSWORD [question] > Enter the pull-secretquestion] > Found SSH key pair in /root/.ssh/ do you want to use them? (yes) ? - You have answered: yes [variables] SUCCESS: variables command completed!","title":"Command variables"},{"location":"openshift-install-power/docs/variables/#command-variables","text":"","title":"Command variables"},{"location":"openshift-install-power/docs/variables/#what-it-does","text":"This command when executed will run interactive prompts for gathering inputs for installing OpenShift on PowerVS. The results will be stored in a file named var.tfvars in the current directory which will be used as an input to the Terraform automation. The installation process needs pull-secret.txt in the current directory for downloading OpenShift images on the cluster. If not found, the variables command will prompt for pull-secret contents. Similar to pull-secret.txt file the script will also lookup for id_rsa & id_rsa.pub files in the current directory. If not found it will prompt to use the current login user's SSH key pair at ~/.ssh/ . If you reply a no then the script will create an SSH key pair for you in the current directory. The private key id_rsa can be used to login to the cluster. The SSH keys should be in OpenSSH format and without a passphrase. Please ensure you have exported the IBM Cloud API key using following command: export IBMCLOUD_API_KEY=<your api key> Optionally you could also export the RHEL subscription password if you do not want to store it in the variables file. export RHEL_SUBS_PASSWORD='<your subscription password>' The script will try to filter the images for selection. The argument -all-images can be used to display all the available images during the prompt for RHEL and RHCOS image. There will be series of questions mainly categorized as:","title":"What it does"},{"location":"openshift-install-power/docs/variables/#multi-choice-question","text":"List of options will be displayed where you need to enter the number corresponding to the choice you want to select. [question] > Select the RHEL image to use for bastion node: 1) rhel-82-10162020 2) rhel-83-11032020 #? 1 - You have answered: rhel-82-10162020","title":"Multi choice question"},{"location":"openshift-install-power/docs/variables/#question-with-default-value","text":"The question will have a default value present at the end in (round-brackets). Just press enter if you want to use the default value OR type the value you want and press Enter key. [question] > Enter a short name to identify the cluster (test-ocp) ? - You have answered: test-ocp [question] > Enter a domain name for the cluster (ibm.com) ? myorg.com - You have answered: myorg.com","title":"Question with default value"},{"location":"openshift-install-power/docs/variables/#question-in-plain-text","text":"The question which can be answered in plain text. Enter the value you want and press Enter key. [question] > Enter RHEL subscription username for bastion nodes ? myredhatuser - You have answered: myredhatuser","title":"Question in plain text"},{"location":"openshift-install-power/docs/variables/#question-with-sensitive-value","text":"The question which accept sensitive information such as passwords and pull-secret contents. [question] > Enter the password for above username. WARNING: If you do not wish to store the subscription password please export RHEL_SUBS_PASSWORD - ***********","title":"Question with sensitive value"},{"location":"openshift-install-power/docs/variables/#usage","text":"# ./openshift-install-powervs variables [setup_tools] Verifying the latest packages and tools [variables] Trying to login with the provided IBMCLOUD_API_KEY... [question] > Select the Service Instance name to use: 1) ocp-cicd-toronto-01 2) ocp-internal-toronto #? 1 - You have answered: ocp-cicd-toronto-01 Targeting service crn:v1:bluemix:public:power-iaas:tor01:a/65b64c1f1c2XXXXX:4a1f10a2-0797-4ac8-9c41-XXXXXXX::... [variables] Gathering information from the selected Service Instance... Please wait [question] > Select the RHEL image to use for bastion node: 1) rhel-82-10162020 2) rhel-83-11032020 #? 1 - You have answered: rhel-82-10162020 [question] > Select the RHCOS image to use for cluster nodes: 1) rhcos-45-09242020 2) rhcos-46-09182020 3) rhcos-47-10172020 #? 2 - You have answered: rhcos-46-09182020 [question] > Select the private network to use: 1) ocp-net #? 1 - You have answered: ocp-net [question] > Select the OCP version to use: 1) 4.5.4 4) 4.5.7 7) 4.5.10 10) 4.5.13 13) 4.5.16 16) 4.5.19 19) fast-4.5 2) 4.5.5 5) 4.5.8 8) 4.5.11 11) 4.5.14 14) 4.5.17 17) 4.5.20 20) latest-4.5 3) 4.5.6 6) 4.5.9 9) 4.5.12 12) 4.5.15 15) 4.5.18 18) candidate-4.5 21) stable-4.5 #? 11 - You have answered: 4.5.14 [question] > Enter a short name to identify the cluster (test-ocp) ? - You have answered: test-ocp [question] > Enter a domain name for the cluster (ibm.com) ? myorg.com - You have answered: myorg.com [question] > Do you want to configure High Availability for bastion nodes? 1) yes 2) no #? 2 - You have answered: no [question] > Do you need NFS storage to be configured? 1) yes 2) no #? 1 - You have answered: yes [question] > Enter the NFS volume size(GB) (300) ? - You have answered: 300 [question] > Do you want to use the default configuration for all the cluster nodes? 1) yes 2) no #? 1 - You have answered: yes [question] > Enter RHEL subscription username for bastion nodes ? myredhatuser - You have answered: myredhatuser [question] > Enter the password for above username. WARNING: If you do not wish to store the subscription password please export RHEL_SUBS_PASSWORD [question] > Enter the pull-secretquestion] > Found SSH key pair in /root/.ssh/ do you want to use them? (yes) ? - You have answered: yes [variables] SUCCESS: variables command completed!","title":"Usage"}]}